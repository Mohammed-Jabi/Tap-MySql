CREATE online _store;
CREATE TABLE customers(customer_id INT AUTO_INCREMENT PRIMARY KEY,
			first_name VARCHAR(50) NOT NULL,
			last_name VARCHAR(50) NOT NULL,
			email VARCHAR(100) NOT NULL UNIQUE,
			phone VARCHAR(50) NOT NULL UNIQUE,
			city VARCHAR(50) NOT NULL);

INSERT INTO `online _store`.customers(first_name, last_name, email, phone, city)
		VALUES('Rohit', 'Sharma', 'rohit.sharma@gmail.com', '+91999999999', 'Bengalore'),
			('Anjali', 'Gupta', 'anjali.gupta@gmail.com', '+918888888888', 'Mumbai'),
			('Vijay', 'Kumar', 'vijay.kumar@gmail.com', '+917777777777', 'Delhi'),
			('Priya', 'Singh', 'priya.singh@gmail.com', '+917878787878', 'Mumbai'),
			('Ravi', 'Patel', 'ravi.patail@gmail.com', '+918989898989', 'Pune');

CREATE TABLE `online _store`.products(product_id INT AUTO_INCREMENT PRIMARY KEY,
			product_name VARCHAR(50) NOT NULL UNIQUE,
			price DECIMAL(10, 2) NOT NULL,
			stock INT NOT NULL);

INSERT INTO `online _store`.products(product_name, price, stock)
		VALUES('Smartphone',25000.00,100),
			('Laptop',70000.00,50),
			('Tablet',15000.00,40),
			('Headphone',20000.00,200),
			('Smartwatch',12000.00,40);


CREATE TABLE `online _store`.orders(order_id INT AUTO_INCREMENT PRIMARY KEY,
			customer_id INT NOT NULL,
			order_date DATE NOT NILL,
			FORIGN KEY (customer_id) REFERENCES customers(customer_id));


INSERT INTO `online _store`.orders(customer_id,order_date)
		VALUES(1,'2023-01-10'),
			(2,'2023-01-12'),
			(3,'2023-01-15'),
			(4,'2023-01-18'),
			(5,'2023-01-22');

CREATE TABLE `online _store`.orders_items(order_items_id INT AUTO_INCREMENT PRIMARY KEY,
			order_id INT NOT NULL,
			product_id INT NOT NULL,
			quantity INT NOT NULL,
			FORIGN KEY (order_id) REFERENCES orders(order_id),
			FORIGN KEY (product_id) REFERENCES products(product_id));

INSERT INTO `online _store`.orders_items(order_iD, product_iD, quantity)
			VALUES(1,1,1),
				(1,2,1),
				(2,3,1),
				(3,1,1),
				(3,2,1),
				(3,3,1),
				(4,4,1),
				(5,5,1);




`online _store`.

SELECT * FROM orders;

#unique values

SELECT DISTINCT customer_id FROM orders;

#where clus

#SELECT column1,column2,..... FROM table_name WHERE condition;

#Select product whic have price equal to 15000.
SELECT * FROM products WHERE price=15000;


#Select product whic have price notequal to 15000.
SELECT * FROM products WHERE price !=15000;
SELECT * FROM products WHERE price <>15000;


#Select product whic have price greater than 20000.
SELECT * FROM products WHERE price >20000;

#Select product whic have price less than 20000.
SELECT * FROM products WHERE price <20000;

#Select product whic have price greaterthan or equal to 25000.
SELECT * FROM products WHERE price >=25000;

#Select product whic have price lessthan or equal to 25000.
SELECT * FROM products WHERE price <=25000;

#Find all products whose price is greater than 15000 and whose stock is 50 and above.
#SELECT * FROM products WHERE price >15000 AND stock >=50;
SELECT product_name AS name, price, stock FROM products WHERE price >15000 AND stock >=50;

#FIND ALL CUSTOMERS FROM THE CITIES OF MUMBAI OR DELHI.
SELECT first_name AS name, city FROM customers WHERE city="Mumbai" OR city="Delhi";

#FIND ALL ORDERS THAT WERE PLACED BETWEEN '2023-01-01' AND '2023-03-31'


#FIND ALL ORDERS THAT WERE NOT PLACED BETWEEN '2023-01-01' AND '2023-03-31'
#SELECT order_id AS id, order_date AS date FROM ORDERS WHERE order_date >="2023-01-01" AND order_date '2023-03-31';
SELECT order_id AS id, order_date AS date FROM ORDERS WHERE order_date BETWEEN >="2023-01-01" AND "2023-03-31";

#FIND ALL ORDERS THAT WERE NOT PLACED NOT BETWEEN '2023-01-01' AND '2023-03-31'
SELECT order_id AS id, order_date AS date FROM ORDERS WHERE order_date NOT  BETWEEN >="2023-01-01" AND "2023-03-31";


#SELECT FIRSTNAME AND EMAIL BELONG TO BENGALURU MUMBAI PUNE
SELECT first_name AS name, email, city FROM customers WHERE city = "Bengaluru" OR city = "Mumbai" OR city = "Pune"; 
SELECT first_name AS name, email, city FROM customers WHERE city IN("Bengaluru","Mumbai","Pune");

#WILD CARD
SELECT city FROM customers WHERE city LIKE '%i'; 

SELECT city FROM customers WHERE city LIKE 'D___i'; 

#COUNT
SELECT COUNT(*) FROM products;
SELECT COUNT(product_name) AS product_count FROM products;

#MAX AND MIN
SELECT MAX(price) AS max_price, MIN(price) AS min_price FROM products;

#AVG
SELECT AVG(price) AS avg_price FROM products;


#SUM
SELECT SUM(price) AS sum_price FROM products;









			